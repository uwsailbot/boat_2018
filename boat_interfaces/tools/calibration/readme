This script runs the Command Line Compass Calibration Program and stores
the results into the imu.launch file in the ROS node above. So when the imu is
started (roslaunch boat_nav imu.launch), it will use the values from the
latest calibration.

Usage:
- Place the script ("calibrate.py") in the same folder as the Command Line Compass
    Calibration Program ("compasscal").
- Edit the script: change the launch_file_path to match the path of the imu.launch
	file on your system and the launch_file_backup_path to a path where the
	imu.launch can be backed up before it is overwriten.
- Plug in the IMU and run using the command "python calibrate.py"

Limitations:
- If no imu is detected, the program will pretend to work and then not say anything
    after it finishes. (If the program is successful, it should spit out a bunch of
    stuff.) Therefore it is recommended to run the compasscal program manually if
	something goes wrong to make sure that the connection is okay.
- If sampling is started and stopped in rapid succession, a math error will occur
    causing the calibration program to run into an infinite loop. To prevent this
	the script force sampling to last a minimum of 3 seconds before it can be stopped.

Tests:
- the mock-compasscal.cpp file can be compiled into a program that behaves similar
	to compasscal in ideal conditions. However, it seems that when reading the output
	of the actual calibration program has different behaviours than reading the output
	of the mock program. The actual calibration program's output cannot seem to be read
	until the program terminates.
